import "pkg:/source/roku_modules/maestro/core/Utils.brs"
import "pkg:/source/ListMixin.bs"
import "pkg:/source/ItemDelegateMixin.bs"
import "pkg:/source/RowItemScroller.bs"
import "pkg:/source/RowItemViewManager.bs"
import "pkg:/source/ItemFocusManager.bs"
import "pkg:/source/roku_modules/maestro/view/BaseView.brs"
import "pkg:/source/cells/BaseCell.bs"

@node("SubHeroCell", "mv_BaseView")
class SubHeroCell extends ml.BaseCell

  private poster
  private rectangle
  private label
  private bgRect

  private lastContent
  private isViewCreated = false
  private posterSize = [450, 320.0]

  function new()
    super()
    m.createViews()
  end function

  private function createViews() as void
    if m.isViewCreated
      return
    end if
    m.isViewCreated = true
    ' scaleRotateCenter: [0, m.posterSize[1]]
    m.bgRect = mc.createSGNode("mv_Rectangle", m.top, "bgRect", {
      size: m.posterSize
      color: "#2222aa"
    })
    m.poster = mc.createSGNode("mv_Poster", m.top, "poster", {
      translation: [0, 0]
      scaleRotateCenter: [0, 0]
      loadingBitmapUri: "http://via.placeholder.com/370x300"
      failedBitmapUri: "http://via.placeholder.com/370x300"
      uri: "http://via.placeholder.com/370x300"
      loadWidth: m.posterSize[0]
      loadHeight: m.posterSize[1]
      size: m.posterSize
      loadDisplayMode: "scaleToFit"
    })
    m.rectangle = mc.createSGNode("mv_Rectangle", m.top, "rectangle", {
      opacity: 0.4
      color: "#000000"
      width: m.posterSize[0]
      height: 20
    })
    m.label = mc.createSGNode("mv_Label", m.top, "label", {
      width: m.posterSize[0]
      horizAlign: "center"
      translation: [m.posterSize[0] + 20, 10]
    })
    m.label = m.top.findNode("label")
    m.size = m.posterSize
  end function

  protected override function onContentChange()
    ' ? " SC 1"
    if m.content = invalid or not m.content.isSamenode(m.lastContent)
      ' ? " SC 2"
      m.lastContent = m.content
      m.createViews()
      m.poster.width = m.size[0]
      m.poster.height = m.size[1]

      m.label.text = "C:" + m.lastContent.title
      m.poster.uri = m.lastContent.HDGRIDPOSTERURL
    end if
  end function

  ' private function onScrollChange()
  '   ' ? "SC: onScrollChange " ; m.row.isScrolling ; " " ; m.list.isScrolling
  '   isScrolling = m.row.isScrolling or m.list.isScrolling
  '   ' ? "SC: onCellScrollChange row " ; m.row.isScrolling
  '   '  ? "SC: onCellScrollChange list " ; m.list.isScrolling
  '   ' m.label.visible = not isScrolling
  '   ' m.label2.visible = not isScrolling
  ' end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ delegate
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private function onWillEnter(index, direction)
    ' ? "SC: onCellWillEnter " ; index ; " " ; direction
    m.onContentChange()
  end function

  private function onWillExit(index, direction)
    ' ? "SC: onCellWillExit " ; index ; " " ; direction
  end function

  private function onDidEnter(index, direction)
    ' ? "SC: onCellDidEnter " ; index ; " " ; direction
    ' m.onContentChange()
  end function

  private function onDidExit(index, direction)
    ' ? "SC: onCellDidExit " ; index ; " " ; direction
  end function

  private function onWillGainFocus(index, direction)
    ' ? "SC: onCellWillGainFocus " ; index ; " " ; direction
  end function

  private function onWillLoseFocus(index, direction)
    ' ? "SC: onCellWillLoseFocus " ; index ; " " ; direction
  end function

  private function onDidGainFocus(index, direction)
    ' ? "SC: onCellDidGainFocus " ; index ; " " ; direction
  end function

  private function onDidLoseFocus(index, direction)
    ' ? "SC: onCellDidLoseFocus " ; index ; " " ; direction
    if direction = 1
    end if
  end function

  private function onGainingFocus(index, direction, fraction)
    ' ? "SC: onGainingFocus " ; index ; " " ; direction ; " "  ; fraction
  end function

  private function onLosingFocus(index, direction, fraction)
    ' ? "SC: onLosingFocus " ; index ; " " ; direction ; " " ; fraction
    if direction = 1
    end if
  end function

end class